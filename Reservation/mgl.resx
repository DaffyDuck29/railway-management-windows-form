<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>